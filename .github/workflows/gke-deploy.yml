name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: template-1743820446385
  GKE_CLUSTER: autopilot-cluster-1
  GKE_REGION: us-central1
  IMAGE: auth-service
  REGISTRY_REGION: us-central1
  REGISTRY: us-central1-docker.pkg.dev/template-1743820446385/docker-registry

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
        project_id: ${{ env.PROJECT_ID }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        install_components: 'gke-gcloud-auth-plugin'

    - name: Configure Docker
      run: |
        gcloud auth configure-docker $REGISTRY_REGION-docker.pkg.dev --quiet

    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_REGION }}

    - name: Build Docker image
      run: |
        docker build \
          -t "$REGISTRY/$IMAGE:$GITHUB_SHA" \
          -t "$REGISTRY/$IMAGE:latest" \
          -f Dockerfile.service .

    - name: Push Docker image
      run: |
        docker push "$REGISTRY/$IMAGE:$GITHUB_SHA"
        docker push "$REGISTRY/$IMAGE:latest"

    - name: Update secrets
      run: |
        cat <<EOF > k8s/secrets.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: auth-service-secrets
        type: Opaque
        stringData:
          mongodb-uri: "${{ secrets.MONGODB_URI }}"
          jwt-secret: "${{ secrets.JWT_SECRET }}"
        EOF

    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s/secrets.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl rollout status deployment/auth-service 